[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "csaf-lint"
version = "2022.3.20"
description = "Common Security Advisory Framework (CSAF) Verification, Validation, and Application Programming Interface (API)."
readme = "README.md"
authors = [{ name = "Stefan Hagen", email = "stefan@hagen.link" }]
maintainers = [{ name = "Stefan Hagen", email = "stefan@hagen.link" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "baseline",
    "body",
    "core",
    "csaf",
    "cvrf",
    "developer-tools",
    "envelope",
    "extension",
    "profile",
    "validation",
]
dependencies = [
    "attrs >= 23.1.0",
    "jsonschema >= 4.20.0",
    "referencing >= 0.31.0",
    "lxml >= 4.9.3",
    "xmlschema >= 2.5.0",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = ["black", "coverage", "hypothesis", "mypy", "pytest", "pytest-cov", "pytest-flake8", "ruff"]

[project.urls]
Homepage = "https://git.sr.ht/~sthagen/csaf-lint"
Bug-Tracker = "https://todo.sr.ht/~sthagen/csaf-lint"
Documentation = "https://codes.dilettant.life/docs/csaf-lint"
Source-Code = "https://git.sr.ht/~sthagen/csaf-lint"
Test-Coverage = "https://codes.dilettant.life/coverage/csaf-lint"

[project.scripts]
csaf-lint = "csaf_lint.cli:app"

[tool.setuptools.packages.find]
include = [
  "csaf_lint",
  "csaf_lint.schema",
  "examples",
]
exclude = ["test*"]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py39", "py310", "py311"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@overload",
]
omit = [
    "*/__main__.py",
]

[tool.ruff]
line-length = 120
select = ["E", "F", "Q"]
ignore = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py310"
unfixable = ["F401"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.ruff.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.mccabe]
max-complexity = 42  # default is 10

[tool.mypy]
strict = true
implicit_reexport = true

[tool.pytest]
testpaths = "test"
filterwarnings = "error"

[tool.pytest.ini_options]
 markers = [
     "slow: marks tests as slow (deselect with '-m \"not slow\"')",
     "serial",
 ]
